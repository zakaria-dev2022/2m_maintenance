<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vwAADr8BOAVTJAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAMtSURBVHhe7ZlL
        axRBFIUngWwiMaL/QA268LVJ0K3gWhCTPyGuBVEEUaPuDQpBN7pJ9jEBFfwJvhDd+lj63imO50ydlvRM
        T3dXdVdN91AfHBi67r1d9yRTVd3TiUQikYhnut3uEvQAWispxi4pvb2giQnoLuQKcydUrl1w4tAddlGR
        VWhSZdsBJlxX8wntMQETrbv5hOabgAn6aj6huSZgYr6bT2ieCZhQqOYTwpmAGx2DrkOPoKw9m3oOhYb3
        zJoLxbleg46qDXuQPAXdg/5CbYVzX4Gm1FZ5kMTmx4UVtVUOJPDfvs1/+X7YyxG1VwyC+f0ZN66qvWIQ
        zEXEJ1+gV9AG9Fifv0I+eaj2ikEwV9K6+QgtQ/PQwAMOr0ELivkE1c2ablUMg01OLfyCbkIzKl8IYqeh
        C9A3qC5GYsA76IDKWoPcfdAbFqqB4AY8gXaqpDOoMQs9ZcGKBDXgLbRL5SqDWjMQF8oqBDPgO7RXpTLB
        +HovMs26hjPBOL8OP3qRbgQz4KLKDAUx1gYQxFw2oU4EMYBb3bTKDAUxrgZwd3DdIoMYcEMlckGckwEE
        cbdMuDVBDJhXiVwQV8WA4ybcGu8G8HibdcJjs/36APXDawOxKvMfXOOJ0eWA5N2AF0pPoTFnVCYFLrts
        id4N2FB6Co05ozIpcHnTjFrh3YBNpafQmDMqkwKXt8yoFd4NeKn0FBpzRmVS4PJrM2qFdwP4PB9iEZyE
        GrkIkgWVyAVxbK6fstvgCRNuTRADllUiF8RVMeC2CbcmiAE8pvo8Cu+APvei7QliALmkMkNBjKsBV0yo
        E8EM4CPrfpXKBOPWBmB8DvrZi3QjmAHExwsRl61vO0ENIHyNNauSzrAG9IwFKxLcAPIeOqiy1iC31S9F
        E6q8FufrtboYmQEJ3L74MoPP81knRp7wOMYY160uj5EbsB0eZbmo8Wcxip/r/BEki0YZMAqiAWqvGATf
        NzljxaraKwbB503OWHFO7RWD4D2Q70UpJHxXsVvtlQMJZ6E/zG45v6EzassOJJ6CeK5vKzxFnlQ77qDI
        Yeg0tNgSca6HNP1IJBKJRCKRSGSATucfUrrwRY6OtqQAAAAASUVORK5CYII=
</value>
  </data>
</root>